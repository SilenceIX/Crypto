#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <random>
#include <omp.h>
#include "BDD.h"

using namespace std;

int main()
{	
	vector <vector <int>> p;
	ofstream op("res.txt");
	ifstream fr("out.txt");
	while (!fr.eof())
	{
		vector <int> k(8);
		fr >> k[0] >> k[1] >> k[2] >> k[3] >> k[4] >> k[5] >> k[6] >> k[7];
		p.push_back(k);
	}
	p.erase(p.end() - 1, p.end());
#pragma omp parallel for
	for (int i = 0; i < p.size(); ++i)
	{
		APNBDD a({ 0, 1, 8, 15, 64, 85, 120, 107, 54, 127, 158, 209, 237, 176, 117, 46, 171, 161, 213, 217, 156, 130, 210,
	202, 41, 107, 247, 179, 133, 211, 107, 59, 47, 98, 127, 52, 242, 171, 146, 205, 140, 137, 124, 127, 202, 219,
	10, 29, 83, 21, 117, 53, 249, 171, 239, 187, 68, 74, 194, 202, 117, 111, 195, 223, 99, 137, 61, 209, 213, 43, 187,
	67, 209, 115, 47, 139, 252, 74, 50, 130, 12, 237, 36, 195, 205, 56, 213, 38, 10, 163, 130, 45, 80, 237, 232, 83, 174,
	8, 168, 8, 133, 55, 179, 7, 137, 103, 47, 199, 57, 195, 175, 83, 22, 187, 102, 205, 74, 243, 10, 181, 133, 96, 85, 182, 66,
	179, 162, 85, 53, 46, 36, 57, 243, 252, 210, 219, 242, 161, 67, 22, 175, 232, 46, 111, 210, 194, 181, 163, 99, 103, 52, 54, 161,
	249, 102, 56, 139, 199, 124, 54, 96, 55, 41, 120, 59, 120, 66, 7, 50, 45, 219, 194, 242, 249, 43, 38, 80, 12, 111, 53, 124, 52, 115,
	61, 182, 162, 41, 59, 1, 1, 174, 168, 7, 247, 64, 182, 55, 211, 64, 162, 68, 252, 163, 29, 239, 67, 56, 146, 36, 223, 21, 232, 99, 140,
	98, 139, 211, 96, 66, 247, 15, 168, 174, 15, 176, 12, 175, 21, 29, 181, 50, 156, 102,
	146, 217, 43, 80, 176, 223, 57, 68, 243, 45, 156, 158, 61, 199, 98, 38, 217, 239, 22, 103, 140, 158, 115 }, p[i]);
		op << a.getDig() << endl;
		cout << i <<  endl;
	}



	system("pause");
}