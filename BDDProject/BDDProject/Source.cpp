#include <iostream>
#include <string>
#include <vector>
#include <fstream>
#include <random>
#include <omp.h>
#include "BDD.h"

using namespace std;


const vector <vector <int>> Data = {
	{0,1,8,15,64,85,120,107,54,127,158,209,237,176,117,46,171,161,213,217,156,130,210,202,41,107,247,179,133,211,107,59,47,98,127,52,242,171,146,205,140,137,124,127,202,219,10,29,83,21,117,53,249,171,239,187,68,74,194,202,117,111,195,223,99,137,61,209,213,43,187,67,209,115,47,139,252,74,50,130,12,237,36,195,205,56,213,38,10,163,130,45,80,237,232,83,174,8,168,8,133,55,179,7,137,103,47,199,57,195,175,83,22,187,102,205,74,243,10,181,133,96,85,182,66,179,162,85,53,46,36,57,243,252,210,219,242,161,67,22,175,232,46,111,210,194,181,163,99,103,52,54,161,249,102,56,139,199,124,54,96,55,41,120,59,120,66,7,50,45,219,194,242,249,43,38,80,12,111,53,124,52,115,61,182,162,41,59,1,1,174,168,7,247,64,182,55,211,64,162,68,252,163,29,239,67,56,146,36,223,21,232,99,140,98,139,211,96,66,247,15,168,174,15,176,12,175,21,29,181,50,156,102,146,217,43,80,176,223,57,68,243,45,156,158,61,199,98,38,217,239,22,103,140,158,115}
, {0,1,54,46,99,56,133,199,239,85,124,223,176,80,243,10,194,55,140,96,139,36,21,163,137,199,98,53,252,232,199,202,29,168,85,249,45,194,181,67,175,161,66,85,163,247,158,211,195,130,243,171,217,194,57,59,213,47,64,163,243,83,182,15,8,161,111,223,140,127,59,209,223,205,29,22,103,47,117,36,237,176,242,182,67,68,140,146,158,120,36,219,12,176,102,195,43,54,50,54,252,187,53,107,161,7,29,162,74,182,38,195,210,59,179,67,47,156,158,52,252,174,56,115,61,53,41,56,171,10,242,74,156,103,21,247,45,55,209,210,38,102,10,83,21,64,52,120,8,7,249,239,55,217,179,68,22,162,66,239,174,187,137,133,202,133,61,107,117,219,247,64,45,217,127,146,12,237,83,171,66,249,205,111,115,41,137,202,1,1,43,50,107,98,99,115,187,232,99,41,213,103,120,211,57,209,68,181,242,15,130,102,8,175,168,22,232,174,61,98,46,50,43,46,80,237,38,130,211,52,117,139,179,181,96,127,12,80,15,74,213,156,219,139,124,111,162,168,146,96,57,210,7,175,124,205},
{0,1,211,52,47,103,219,117,232,252,96,146,237,176,66,249,57,210,199,202,111,205,182,242,139,117,46,54,247,64,117,36,171,10,252,187,209,57,161,175,162,22,174,252,242,15,217,194,56,115,66,239,59,57,102,130,107,53,74,242,66,85,68,181,29,22,127,146,199,133,130,38,146,140,171,83,98,53,124,205,12,237,67,68,175,7,199,137,217,45,205,223,80,237,99,56,120,211,158,211,247,21,54,50,22,168,171,243,179,68,41,56,195,130,8,175,53,61,217,55,247,163,103,213,43,54,156,103,239,249,67,179,61,98,182,15,209,210,38,195,41,99,249,85,182,74,55,45,29,168,187,232,210,59,8,7,83,243,174,232,163,21,139,219,36,219,43,50,124,223,15,74,209,59,133,137,80,12,85,239,174,187,140,127,213,156,139,36,1,1,120,158,50,46,47,213,21,64,47,156,107,98,45,194,102,38,7,161,67,181,115,99,29,162,10,83,64,163,43,46,52,158,120,52,176,12,41,115,194,55,124,111,8,161,202,133,80,176,181,179,107,61,223,111,96,127,243,10,137,202,102,195,168,162,96,140},
{0,1,239,22,8,15,38,217,57,223,130,156,176,80,202,210,64,85,158,115,120,107,103,140,43,217,161,171,146,102,217,213,211,55,223,195,162,64,111,117,124,127,36,223,140,137,21,232,247,7,202,194,182,64,74,68,10,29,99,140,202,219,98,139,54,127,45,156,158,209,68,243,156,50,211,133,181,29,59,107,237,176,199,98,117,46,158,61,21,175,107,41,12,176,179,247,67,239,187,239,146,56,171,249,127,52,211,96,47,98,66,247,252,68,53,117,29,163,21,83,146,205,15,168,242,171,174,15,194,210,199,47,163,181,103,137,162,85,243,252,66,179,210,219,103,99,83,175,54,52,195,57,85,182,53,46,133,96,36,57,205,56,43,38,213,38,242,249,59,41,137,99,162,182,209,61,12,237,219,194,36,195,50,45,168,174,43,213,1,1,67,187,249,161,8,168,56,102,8,174,10,181,175,232,74,243,46,111,199,139,7,179,54,124,55,133,102,205,242,161,22,187,67,22,80,237,66,7,232,83,59,120,53,111,115,209,12,80,139,47,10,163,41,120,130,45,96,55,61,115,74,252,52,124,130,50},
{0,1,64,209,171,43,202,103,99,174,46,205,80,12,168,223,179,41,56,52,117,210,139,187,199,103,45,232,163,47,103,55,57,219,174,146,130,179,175,182,68,162,10,174,187,242,15,74,61,22,168,102,181,179,8,161,85,239,53,187,168,66,111,67,194,162,124,205,56,96,161,115,205,195,57,243,120,239,98,210,176,80,21,111,182,127,56,140,15,59,210,36,237,80,29,61,217,64,247,64,163,137,232,252,162,133,57,7,54,111,213,61,156,161,211,182,239,50,15,38,163,249,43,83,158,232,107,43,102,223,21,54,50,120,139,242,130,41,115,156,213,29,223,66,139,53,38,59,194,133,146,99,41,181,211,127,243,7,10,99,249,137,199,202,55,202,158,252,98,36,242,53,130,181,96,140,237,176,66,102,10,146,195,124,83,107,199,55,1,1,217,247,252,45,171,83,137,47,171,107,85,120,59,74,8,115,127,175,21,67,22,29,194,68,219,243,47,249,158,45,209,247,217,209,12,176,213,22,74,38,98,117,211,175,52,96,237,12,67,54,85,50,36,117,46,124,7,219,140,52,8,156,133,68,46,195}, 
{0,1,179,41,232,45,205,46,53,242,55,199,237,176,249,137,29,61,98,210,96,56,127,182,124,46,38,74,67,54,46,195,99,146,242,139,213,29,243,7,168,66,187,242,182,175,161,8,120,85,249,47,22,29,171,83,247,64,211,182,249,163,133,162,102,66,202,199,98,36,83,107,199,103,99,174,209,64,52,56,12,237,68,133,7,219,98,117,161,115,56,140,80,237,239,120,130,179,181,179,67,111,74,15,66,223,99,10,194,133,50,120,43,83,57,7,64,217,161,156,67,21,45,252,59,74,158,45,47,137,68,194,217,209,127,175,213,61,107,43,50,239,137,163,127,211,156,115,102,223,139,53,61,22,57,219,174,10,187,53,21,111,124,205,195,205,59,15,52,140,175,211,213,22,36,117,80,12,163,47,187,139,103,202,252,158,124,195,1,1,130,181,15,38,232,252,111,54,232,158,247,209,115,8,171,107,219,243,68,162,85,239,102,168,146,174,54,21,59,38,41,181,130,41,176,12,50,85,8,156,52,96,57,243,210,36,80,176,162,194,247,217,140,96,55,202,10,146,117,210,171,43,223,168,55,103}, 
{0,1,74,252,239,22,61,115,47,139,107,120,80,12,140,103,8,15,130,50,38,217,52,124,209,115,85,64,111,53,115,158,102,56,139,98,174,8,219,202,36,223,199,139,124,127,7,179,161,249,140,99,168,8,29,10,21,232,54,124,140,137,55,133,57,223,41,120,130,156,10,163,120,59,102,146,83,232,213,217,176,80,96,55,202,210,130,45,7,66,217,43,237,80,171,161,243,74,68,74,111,46,64,182,223,195,102,205,211,55,242,161,181,10,194,202,232,175,7,247,111,117,22,187,162,64,67,22,99,103,96,211,175,83,52,127,174,15,163,181,242,171,103,137,52,54,247,66,57,195,98,47,15,168,194,210,146,205,199,47,117,46,209,61,158,61,162,182,213,43,127,54,174,168,156,45,237,176,137,99,199,98,59,41,187,67,209,158,1,1,243,68,182,85,239,187,46,53,239,67,21,83,66,179,29,163,210,219,96,133,249,171,57,36,56,146,53,117,162,85,252,68,243,252,12,176,242,249,179,247,213,38,194,219,50,156,237,12,133,211,21} };





int main()
{	
	vector <vector <int>> v;
	vector <int> res;
	ifstream fr("out8.txt");
	while (!fr.eof())
	{
		vector <int> k(8);
		fr >> k[0] >> k[1] >> k[2] >> k[3] >> k[4] >> k[5] >> k[6] >> k[7];
		v.push_back(k);
	}
	v.erase(v.end() - 1, v.end());
	for (int i = 0; i < Data.size(); ++i)
	{
		vector <int> p;
#pragma omp parallel for
		for (int j = 0; j < v.size(); ++j)
		{
			APNBDD a = APNBDD(Data[i], v[j]);
			
			p.push_back(a.getDig());
		}	

	
		int min = 10000, max = 0;
		double avr = 0;
		for (int i = 0; i < p.size(); ++i)
		{
			avr += p[i];
			if (p[i] > max)
			{
				max = p[i];
			}
			if (p[i] < min)
			{
				min = p[i];
			}
		}
		double dx = 0;
		avr /= p.size();
		for (int i = 0; i < p.size(); ++i)
		{
			dx += p[i] * p[i];
		}
		dx /= p.size();
		dx -= avr * avr;
		dx = sqrt(dx);
		cout << max << " " << min << " " << avr << " " << dx << " " << endl;
	}



	system("pause");
}